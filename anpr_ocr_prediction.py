# -*- coding: utf-8 -*-
"""anpr_ocr_prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fzf76plmwnEjjMfBSeo5vd3bDOgXTKY2
"""

import keras
import tensorflow.compat.v1 as tf
import cv2
from keras.models import load_model
import numpy as np
import itertools

tf.disable_eager_execution()

letters = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'E', 'H', 'K', 'M', 'O', 'P', 'T', 'X', 'Y']


def decode_batch(out):
    ret = []
    for j in range(out.shape[0]):
        out_best = list(np.argmax(out[j, 2:], 1))
        out_best = [k for k, g in itertools.groupby(out_best)]
        outstr = ''
        for c in out_best:
            if c < len(letters):
                outstr += letters[c]
        ret.append(outstr)
    return ret

def ocr_prediction(img):

  img = img.astype(np.float32)
  if len(img.shape) == 3:
      img = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
  img = cv2.resize(img, (128, 64))
  img /= 255
  img = img.T
  img = np.expand_dims(img, -1)
  img = np.expand_dims(img, 0)

  g = tf.Graph()
  with g.as_default():
      X_data = img
      model = load_model('anpr_models/ocr/anprocr2.h5', compile=False)
      sess = tf.Session()
      init = tf.global_variables_initializer()
      sess.run(init)
      tf.compat.v1.keras.backend.set_session(sess)
      net_inp = model.get_layer(name='the_input').input.ref()
      net_out = model.get_layer(name='softmax').output
      net_out_value = sess.run(net_out, feed_dict={net_inp.deref():X_data})
      pred_text = decode_batch(net_out_value)
      sess.close()
  return pred_text


def make_predictions(img):
  # tf.compat.v1.disable_eager_execution()

  pred_text = ocr_prediction(img)
  return pred_text